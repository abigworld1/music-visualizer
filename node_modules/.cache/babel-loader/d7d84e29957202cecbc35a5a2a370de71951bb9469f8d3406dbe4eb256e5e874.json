{"ast":null,"code":"import{useState,useRef,useEffect}from\"react\";import\"./App.css\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export default function App(){const[audioFile,setAudioFile]=useState(null);const[fileName,setFileName]=useState(\"\");const[displayName,setDisplayName]=useState(\"\");const[customText,setCustomText]=useState(\"\");// カスタムテキスト用の状態\nconst[useCustomText,setUseCustomText]=useState(false);// カスタムテキストを使用するかどうかのフラグ\nconst[isPlaying,setIsPlaying]=useState(false);const[showFileName,setShowFileName]=useState(true);const[fontSize,setFontSize]=useState(16);const[selectedFont,setSelectedFont]=useState(\"Arial, sans-serif\");const[selectedVisuals,setSelectedVisuals]=useState({bars:true,circles:true,waves:true,particles:true,polarLines:true,spectrogramGrid:true});const[waveAmplitude,setWaveAmplitude]=useState(50);const[waveBaseline,setWaveBaseline]=useState(128);const[particleCount,setParticleCount]=useState(50);const[snowSize,setSnowSize]=useState(3);const[lineCount,setLineCount]=useState(60);const[lineLength,setLineLength]=useState(50);const[gridCellSize,setGridCellSize]=useState(20);const[gridSensitivity,setGridSensitivity]=useState(50);const[playDelayTimeout,setPlayDelayTimeout]=useState(null);// 再生遅延用\nconst canvasRef=useRef(null);const canvasContainerRef=useRef(null);const audioRef=useRef(null);const audioContextRef=useRef(null);const analyserRef=useRef(null);const sourceRef=useRef(null);const animationRef=useRef(null);const particlesRef=useRef([]);const gridCellsRef=useRef([]);// Font options\nconst fontOptions=[{name:\"Arial\",value:\"Arial, sans-serif\"},{name:\"Times New Roman\",value:\"Times New Roman, serif\"},{name:\"Courier New\",value:\"Courier New, monospace\"},{name:\"Georgia\",value:\"Georgia, serif\"},{name:\"Verdana\",value:\"Verdana, sans-serif\"},{name:\"Impact\",value:\"Impact, sans-serif\"},{name:\"Comic Sans MS\",value:\"Comic Sans MS, cursive\"}];useEffect(()=>{// デフォルトの音声ファイルをセット\nconst defaultAudioPath=process.env.PUBLIC_URL+\"/audio/edge-of-knowledge.wav\";setAudioFile(defaultAudioPath);setFileName(\"edge-of-knowledge.wav\");setDisplayName(\"edge-of-knowledge\");if(audioRef.current){audioRef.current.src=defaultAudioPath;}},[]);// Set canvas dimensions for Instagram Reel (9:16 aspect ratio)\nuseEffect(()=>{const setCanvasDimensions=()=>{if(canvasRef.current&&canvasContainerRef.current){const container=canvasContainerRef.current;const containerWidth=container.clientWidth;// Calculate height based on 9:16 aspect ratio\nconst reelHeight=containerWidth*16/9;canvasRef.current.width=containerWidth;canvasRef.current.height=reelHeight;// Set fixed height to container to maintain aspect ratio\ncontainer.style.height=`${reelHeight}px`;}};setCanvasDimensions();window.addEventListener(\"resize\",setCanvasDimensions);return()=>window.removeEventListener(\"resize\",setCanvasDimensions);},[]);// Initialize particles\nuseEffect(()=>{initParticles();},[particleCount,snowSize]);// Initialize grid cells\nuseEffect(()=>{initGridCells();},[gridCellSize]);// Refresh animation when font or visualization changes\nuseEffect(()=>{if(isPlaying&&analyserRef.current){// Cancel existing animation and restart to apply font changes\ncancelAnimationFrame(animationRef.current);visualize();}},[fontSize,selectedFont,showFileName,useCustomText,customText]);useEffect(()=>{if(isPlaying&&analyserRef.current){cancelAnimationFrame(animationRef.current);visualize();}},[selectedVisuals,waveAmplitude,snowSize,lineCount,lineLength,gridCellSize,gridSensitivity]);// Snow particle initialization\nconst initParticles=()=>{if(!canvasRef.current)return;const canvas=canvasRef.current;const width=canvas.width||canvasContainerRef.current.clientWidth;const height=canvas.height||canvasContainerRef.current.clientHeight;const particles=[];for(let i=0;i<particleCount;i++){particles.push({x:Math.random()*width,y:Math.random()*height,// Base radius now uses the snowSize state\nradius:(Math.random()*2.5+1.5)*(snowSize/3),speed:Math.random()*1+0.5,swingFactor:Math.random()*2+1,swingOffset:Math.random()*Math.PI*2,energy:0});}particlesRef.current=particles;};// グリッドセルの初期化\nconst initGridCells=()=>{if(!canvasRef.current)return;const canvas=canvasRef.current;const width=canvas.width||canvasContainerRef.current.clientWidth;const height=canvas.height||canvasContainerRef.current.clientHeight;const cellSize=gridCellSize;const rows=Math.ceil(height/cellSize);const cols=Math.ceil(width/cellSize);const cells=[];for(let row=0;row<rows;row++){for(let col=0;col<cols;col++){cells.push({x:col*cellSize,y:row*cellSize,size:cellSize,energy:0,targetEnergy:0});}}gridCellsRef.current=cells;};// Calculate average volume\nconst calculateAverageVolume=dataArray=>{let sum=0;for(let i=0;i<dataArray.length;i++){sum+=dataArray[i];}return sum/dataArray.length;};const handleFileChange=event=>{const file=event.target.files[0];if(file){// ファイル名を小文字に変換して拡張子をチェック\nconst fileName=file.name.toLowerCase();// 許可する音声ファイルの拡張子を増やす\nconst validExtensions=['.wav','.mp3','.ogg','.m4a','.aac','.flac','.mp4'];const isValidAudio=validExtensions.some(ext=>fileName.endsWith(ext));if(isValidAudio||file.type.startsWith('audio/')){const url=URL.createObjectURL(file);setAudioFile(url);setFileName(file.name);// 拡張子を削除して表示名を設定\nsetDisplayName(file.name.replace(/\\.[^/.]+$/,\"\"));if(audioRef.current){audioRef.current.src=url;}}else{alert(\"Please upload an audio file (WAV, MP3, OGG, M4A, AAC, FLAC supported)\");}}};const setupAudioContext=()=>{if(!audioContextRef.current){const AudioContext=window.AudioContext||window.webkitAudioContext;audioContextRef.current=new AudioContext();analyserRef.current=audioContextRef.current.createAnalyser();analyserRef.current.fftSize=2048;sourceRef.current=audioContextRef.current.createMediaElementSource(audioRef.current);sourceRef.current.connect(analyserRef.current);analyserRef.current.connect(audioContextRef.current.destination);}};const togglePlay=()=>{if(!audioFile)return;if(isPlaying){audioRef.current.pause();cancelAnimationFrame(animationRef.current);// 再生中にPauseした場合、遅延タイマーもクリア\nif(playDelayTimeout){clearTimeout(playDelayTimeout);setPlayDelayTimeout(null);}setIsPlaying(false);}else{// すでに遅延タイマーがあればクリア\nif(playDelayTimeout){clearTimeout(playDelayTimeout);}// 3秒遅延して再生\nconst timeoutId=setTimeout(()=>{setupAudioContext();audioRef.current.play();visualize();setIsPlaying(true);setPlayDelayTimeout(null);},3000);setPlayDelayTimeout(timeoutId);}};const handleVisualChange=type=>{setSelectedVisuals(prev=>({...prev,[type]:!prev[type]}));// Ensure at least one visualization is selected\nconst updatedVisuals={...selectedVisuals,[type]:!selectedVisuals[type]};if(!Object.values(updatedVisuals).some(v=>v)){setSelectedVisuals(prev=>({...prev,bars:true}));}};const visualize=()=>{const canvas=canvasRef.current;const ctx=canvas.getContext(\"2d\");const analyser=analyserRef.current;const bufferLength=analyser.frequencyBinCount;const dataArray=new Uint8Array(bufferLength);const timeDataArray=new Uint8Array(bufferLength);const WIDTH=canvas.width;const HEIGHT=canvas.height;// For smoothing waves\nlet prevWaveData=new Array(bufferLength).fill(waveBaseline);// For smoothing polar line values\nlet prevPolarData=new Array(lineCount).fill(0);const draw=()=>{animationRef.current=requestAnimationFrame(draw);analyser.getByteFrequencyData(dataArray);analyser.getByteTimeDomainData(timeDataArray);// Calculate average volume\nconst avgVolume=calculateAverageVolume(dataArray);ctx.fillStyle=\"rgb(20, 20, 20)\";ctx.fillRect(0,0,WIDTH,HEIGHT);// Bar visualization\nif(selectedVisuals.bars){const barWidth=WIDTH/bufferLength*2.5;let barHeight;let x=0;for(let i=0;i<bufferLength;i++){barHeight=dataArray[i]*HEIGHT/512;const grayValue=Math.min(255,dataArray[i]+50);ctx.fillStyle=`rgba(${grayValue}, ${grayValue}, ${grayValue}, 0.7)`;ctx.fillRect(x,HEIGHT-barHeight,barWidth,barHeight);x+=barWidth+1;if(x>WIDTH)break;}}// Circle visualization\nif(selectedVisuals.circles){ctx.beginPath();ctx.arc(WIDTH/2,HEIGHT/2,5,0,2*Math.PI);ctx.fillStyle=\"rgba(255, 255, 255, 0.7)\";ctx.fill();const maxRadius=Math.min(WIDTH,HEIGHT)/2;for(let i=0;i<bufferLength;i+=5){const radius=dataArray[i]*maxRadius/255;if(radius>0){ctx.beginPath();ctx.arc(WIDTH/2,HEIGHT/2,radius,0,2*Math.PI);const opacity=dataArray[i]/255*0.6;ctx.strokeStyle=`rgba(255, 255, 255, ${opacity})`;ctx.lineWidth=2;ctx.stroke();}}}// Wave visualization\nif(selectedVisuals.waves){ctx.lineWidth=2;ctx.strokeStyle=\"rgba(255, 255, 255, 0.7)\";ctx.beginPath();const sliceWidth=WIDTH/bufferLength;let x=0;const amplitudeScale=waveAmplitude/100;const volumeFactor=Math.max(0.2,Math.min(1.5,avgVolume/128));// 十分な振幅があるか確認するためのフラグ\nlet hasSignificantAmplitude=false;// 振幅が一定のしきい値を超えているか調べる\nfor(let i=0;i<bufferLength;i++){const amplitude=Math.abs(timeDataArray[i]-waveBaseline);if(amplitude*amplitudeScale*volumeFactor>2){hasSignificantAmplitude=true;break;}}// 振幅が十分ある場合のみ波形を描画\nif(hasSignificantAmplitude){for(let i=0;i<bufferLength;i++){const deviation=(timeDataArray[i]-waveBaseline)*amplitudeScale*volumeFactor;const smoothedValue=prevWaveData[i]*0.3+(waveBaseline+deviation)*0.7;prevWaveData[i]=smoothedValue;const y=HEIGHT/2+(smoothedValue-waveBaseline)*HEIGHT/256;if(i===0){ctx.moveTo(x,y);}else{ctx.lineTo(x,y);}x+=sliceWidth;if(x>WIDTH)break;}ctx.stroke();}}// Snow particles visualization with enhanced audio reactivity\nif(selectedVisuals.particles){const particles=particlesRef.current;const volume=avgVolume/255;const time=Date.now()/1000;particles.forEach(p=>{// Update energy based on volume - increased amplitude for better reactivity\np.energy=volume*2.5;// Amplified to make changes more visible\n// Make particles fall from top to bottom\np.y+=p.speed*(1+p.energy);// Add swinging motion (like snow)\np.x+=Math.sin(time*p.swingFactor+p.swingOffset)*(0.5+p.energy*1.5);// Reset position when reaching bottom\nif(p.y>HEIGHT){p.y=0;p.x=Math.random()*WIDTH;}// Keep particles within screen bounds\nif(p.x<0)p.x=WIDTH;if(p.x>WIDTH)p.x=0;// Draw snowflake with dramatically enhanced size variation based on audio\n// Significantly larger size multiplier based on energy\nconst radius=p.radius*(1+p.energy*4);// Amplified size change\nconst brightness=200+Math.floor(p.energy*55);ctx.beginPath();ctx.arc(p.x,p.y,radius,0,Math.PI*2);ctx.fillStyle=`rgba(${brightness}, ${brightness}, ${brightness}, 0.8)`;ctx.fill();// Draw snowflake pattern for particles\n// Larger minimum threshold to make sure more snowflakes show their pattern\nif(radius>1.5){// Draw cross pattern for snowflake\nconst armLength=radius*1.5;ctx.beginPath();// Horizontal line\nctx.moveTo(p.x-armLength,p.y);ctx.lineTo(p.x+armLength,p.y);// Vertical line\nctx.moveTo(p.x,p.y-armLength);ctx.lineTo(p.x,p.y+armLength);// Diagonal line 1\nctx.moveTo(p.x-armLength*0.7,p.y-armLength*0.7);ctx.lineTo(p.x+armLength*0.7,p.y+armLength*0.7);// Diagonal line 2\nctx.moveTo(p.x-armLength*0.7,p.y+armLength*0.7);ctx.lineTo(p.x+armLength*0.7,p.y-armLength*0.7);ctx.strokeStyle=`rgba(${brightness}, ${brightness}, ${brightness}, 0.4)`;ctx.lineWidth=0.5;ctx.stroke();}});}// Polar Lines visualization\nif(selectedVisuals.polarLines){const centerX=WIDTH/2;const centerY=HEIGHT/2;const maxLength=Math.min(WIDTH,HEIGHT)*(lineLength/100);// 周波数データを放射状のラインに分配\nconst step=Math.floor(bufferLength/lineCount);// 放射状ラインを描画\nfor(let i=0;i<lineCount;i++){const angle=i/lineCount*Math.PI*2;const dataIndex=i*step;// 音量に基づいてラインの長さを決定（スムージング適用）\nconst rawValue=dataArray[dataIndex%bufferLength]/255;const smoothedValue=prevPolarData[i]*0.3+rawValue*0.7;prevPolarData[i]=smoothedValue;const length=smoothedValue*maxLength;// ラインの座標を計算\nconst x1=centerX;const y1=centerY;const x2=centerX+Math.cos(angle)*length;const y2=centerY+Math.sin(angle)*length;// ラインの太さを音量に基づいて変える\nconst lineWidth=1+smoothedValue*4;// ラインの明るさも音量に基づいて変える\nconst brightness=150+Math.floor(smoothedValue*105);const opacity=0.3+smoothedValue*0.6;// ラインを描画\nctx.beginPath();ctx.moveTo(x1,y1);ctx.lineTo(x2,y2);ctx.strokeStyle=`rgba(${brightness}, ${brightness}, ${brightness}, ${opacity})`;ctx.lineWidth=lineWidth;ctx.stroke();// フェードアウト効果のあるサブライン\nif(smoothedValue>0.2){const subLength=length*1.3;const x3=centerX+Math.cos(angle)*subLength;const y3=centerY+Math.sin(angle)*subLength;ctx.beginPath();ctx.moveTo(x2,y2);ctx.lineTo(x3,y3);ctx.strokeStyle=`rgba(${brightness}, ${brightness}, ${brightness}, ${opacity*0.3})`;ctx.lineWidth=lineWidth*0.5;ctx.stroke();}}}// スペクトログラムグリッド視覚化（新しい視覚化）\nif(selectedVisuals.spectrogramGrid){const cells=gridCellsRef.current;const sensitivity=gridSensitivity/100;// 感度を0-1の範囲に正規化\n// 周波数データを分析してグリッドのエネルギーを更新\nconst frequencyStep=Math.floor(bufferLength/cells.length);cells.forEach((cell,index)=>{// 周波数データからエネルギーを計算\nconst dataIndex=index*frequencyStep%bufferLength;const rawEnergy=dataArray[dataIndex]/255*sensitivity*2;// 感度を適用\n// スムージングを適用\ncell.targetEnergy=rawEnergy;cell.energy=cell.energy*0.7+cell.targetEnergy*0.3;// エネルギーに応じてグリッドセルを描画\nif(cell.energy>0.05){// 閾値を設定してノイズを減らす\nconst size=cell.size*Math.min(0.9,cell.energy*0.8);// 最大サイズの制限\nconst x=cell.x+(cell.size-size)/2;const y=cell.y+(cell.size-size)/2;// エネルギーに応じて明るさを変える\nconst brightness=100+Math.floor(cell.energy*155);const opacity=Math.min(0.9,0.2+cell.energy*0.7);// グリッドセルを描画\nctx.fillStyle=`rgba(${brightness}, ${brightness}, ${brightness}, ${opacity})`;// 正方形ではなく円を描画してモダンな印象に\nctx.beginPath();ctx.arc(cell.x+cell.size/2,cell.y+cell.size/2,size/2,0,Math.PI*2);ctx.fill();// エネルギーが高い場合はアウトラインも描画\nif(cell.energy>0.4){ctx.strokeStyle=`rgba(255, 255, 255, ${opacity*0.6})`;ctx.lineWidth=1;ctx.stroke();}// 強いエネルギーの場合、パルス効果を追加\nif(cell.energy>0.7){const pulseSize=size*1.3;const pulseX=cell.x+(cell.size-pulseSize)/2;const pulseY=cell.y+(cell.size-pulseSize)/2;ctx.beginPath();ctx.arc(cell.x+cell.size/2,cell.y+cell.size/2,pulseSize/2,0,Math.PI*2);ctx.strokeStyle=`rgba(255, 255, 255, ${opacity*0.2})`;ctx.lineWidth=2;ctx.stroke();}}});}// Display text (filename or custom text)\nif(showFileName){// テキストを表示する場合\nconst textToDisplay=useCustomText&&customText.trim()!==\"\"?customText:displayName;if(textToDisplay){ctx.font=`${fontSize}px ${selectedFont}`;ctx.fillStyle=\"white\";ctx.textAlign=\"center\";ctx.fillText(textToDisplay,WIDTH/2,HEIGHT/2);}}};draw();};return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Music Visualizer\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"audio/*,.wav,.mp3,.ogg,.m4a,.aac,.flac\",onChange:handleFileChange,id:\"file-input\",className:\"file-input\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"file-input\",className:\"file-input-label\",children:\"Choose .wav file\"})]}),fileName&&/*#__PURE__*/_jsxs(\"div\",{className:\"file-info\",children:[\"Selected file: \",displayName]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"control-row\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:togglePlay,disabled:!audioFile,className:`control-button ${!audioFile?\"disabled\":\"\"}`,children:isPlaying?\"Pause\":\"Play\"}),/*#__PURE__*/_jsx(\"div\",{className:\"control-group\",children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:showFileName,onChange:()=>setShowFileName(!showFileName)}),\"Show Text\"]})})]}),showFileName&&/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"control-group text-display-option\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",checked:!useCustomText,onChange:()=>setUseCustomText(false)}),\"Use Filename\"]}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"radio\",checked:useCustomText,onChange:()=>setUseCustomText(true)}),\"Use Custom Text\"]})]})}),showFileName&&useCustomText&&/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"text-input-container\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:customText,onChange:e=>setCustomText(e.target.value),placeholder:\"Enter your custom text\",className:\"custom-text-input\"})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Font Size: \",fontSize,\"px\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"8\",max:\"64\",value:fontSize,onChange:e=>setFontSize(parseInt(e.target.value)),className:\"slider\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Font:\"}),/*#__PURE__*/_jsx(\"select\",{value:selectedFont,onChange:e=>setSelectedFont(e.target.value),className:\"select\",children:fontOptions.map(font=>/*#__PURE__*/_jsx(\"option\",{value:font.value,children:font.name},font.name))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"control-row\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Visualizations:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"checkbox-group\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"visual-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"bars\",checked:selectedVisuals.bars,onChange:()=>handleVisualChange(\"bars\")}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"bars\",children:\"Bars\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"visual-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"circles\",checked:selectedVisuals.circles,onChange:()=>handleVisualChange(\"circles\")}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"circles\",children:\"Circles\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"visual-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"waves\",checked:selectedVisuals.waves,onChange:()=>handleVisualChange(\"waves\")}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"waves\",children:\"Waves\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"visual-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"particles\",checked:selectedVisuals.particles,onChange:()=>handleVisualChange(\"particles\")}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"particles\",children:\"Snow\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"visual-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"polarLines\",checked:selectedVisuals.polarLines,onChange:()=>handleVisualChange(\"polarLines\")}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"polarLines\",children:\"Polar Lines\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"visual-option\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"spectrogramGrid\",checked:selectedVisuals.spectrogramGrid,onChange:()=>handleVisualChange(\"spectrogramGrid\")}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"spectrogramGrid\",children:\"Spectrogram Grid\"})]})]})]}),selectedVisuals.waves&&/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Wave Sensitivity: \",waveAmplitude,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"5\",max:\"100\",value:waveAmplitude,onChange:e=>setWaveAmplitude(parseInt(e.target.value)),className:\"sensitivity-slider\"})]})}),selectedVisuals.particles&&/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Snow Density: \",particleCount]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"10\",max:\"200\",value:particleCount,onChange:e=>setParticleCount(parseInt(e.target.value)),className:\"sensitivity-slider\"})]})}),selectedVisuals.particles&&/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Snow Size: \",snowSize]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1\",max:\"10\",value:snowSize,onChange:e=>setSnowSize(parseInt(e.target.value)),className:\"sensitivity-slider\"})]})}),selectedVisuals.polarLines&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Line Count: \",lineCount]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"10\",max:\"180\",value:lineCount,onChange:e=>setLineCount(parseInt(e.target.value)),className:\"sensitivity-slider\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Line Length: \",lineLength,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"10\",max:\"100\",value:lineLength,onChange:e=>setLineLength(parseInt(e.target.value)),className:\"sensitivity-slider\"})]})})]}),selectedVisuals.spectrogramGrid&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Grid Cell Size: \",gridCellSize,\"px\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"10\",max:\"50\",value:gridCellSize,onChange:e=>setGridCellSize(parseInt(e.target.value)),className:\"sensitivity-slider\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"control-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"slider-container\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Grid Sensitivity: \",gridSensitivity,\"%\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"10\",max:\"100\",value:gridSensitivity,onChange:e=>setGridSensitivity(parseInt(e.target.value)),className:\"sensitivity-slider\"})]})})]})]}),/*#__PURE__*/_jsx(\"div\",{ref:canvasContainerRef,className:\"canvas-container\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"canvas\"})}),/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,className:\"audio-element\"})]});}","map":{"version":3,"names":["useState","useRef","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","audioFile","setAudioFile","fileName","setFileName","displayName","setDisplayName","customText","setCustomText","useCustomText","setUseCustomText","isPlaying","setIsPlaying","showFileName","setShowFileName","fontSize","setFontSize","selectedFont","setSelectedFont","selectedVisuals","setSelectedVisuals","bars","circles","waves","particles","polarLines","spectrogramGrid","waveAmplitude","setWaveAmplitude","waveBaseline","setWaveBaseline","particleCount","setParticleCount","snowSize","setSnowSize","lineCount","setLineCount","lineLength","setLineLength","gridCellSize","setGridCellSize","gridSensitivity","setGridSensitivity","playDelayTimeout","setPlayDelayTimeout","canvasRef","canvasContainerRef","audioRef","audioContextRef","analyserRef","sourceRef","animationRef","particlesRef","gridCellsRef","fontOptions","name","value","defaultAudioPath","process","env","PUBLIC_URL","current","src","setCanvasDimensions","container","containerWidth","clientWidth","reelHeight","width","height","style","window","addEventListener","removeEventListener","initParticles","initGridCells","cancelAnimationFrame","visualize","canvas","clientHeight","i","push","x","Math","random","y","radius","speed","swingFactor","swingOffset","PI","energy","cellSize","rows","ceil","cols","cells","row","col","size","targetEnergy","calculateAverageVolume","dataArray","sum","length","handleFileChange","event","file","target","files","toLowerCase","validExtensions","isValidAudio","some","ext","endsWith","type","startsWith","url","URL","createObjectURL","replace","alert","setupAudioContext","AudioContext","webkitAudioContext","createAnalyser","fftSize","createMediaElementSource","connect","destination","togglePlay","pause","clearTimeout","timeoutId","setTimeout","play","handleVisualChange","prev","updatedVisuals","Object","values","v","ctx","getContext","analyser","bufferLength","frequencyBinCount","Uint8Array","timeDataArray","WIDTH","HEIGHT","prevWaveData","Array","fill","prevPolarData","draw","requestAnimationFrame","getByteFrequencyData","getByteTimeDomainData","avgVolume","fillStyle","fillRect","barWidth","barHeight","grayValue","min","beginPath","arc","maxRadius","opacity","strokeStyle","lineWidth","stroke","sliceWidth","amplitudeScale","volumeFactor","max","hasSignificantAmplitude","amplitude","abs","deviation","smoothedValue","moveTo","lineTo","volume","time","Date","now","forEach","p","sin","brightness","floor","armLength","centerX","centerY","maxLength","step","angle","dataIndex","rawValue","x1","y1","x2","cos","y2","subLength","x3","y3","sensitivity","frequencyStep","cell","index","rawEnergy","pulseSize","pulseX","pulseY","textToDisplay","trim","font","textAlign","fillText","className","children","accept","onChange","id","htmlFor","onClick","disabled","checked","e","placeholder","parseInt","map","ref"],"sources":["/home/hirayama/music-visualizer/src/App.js"],"sourcesContent":["import { useState, useRef, useEffect } from \"react\";\nimport \"./App.css\";\n\nexport default function App() {\n  const [audioFile, setAudioFile] = useState(null);\n  const [fileName, setFileName] = useState(\"\");\n  const [displayName, setDisplayName] = useState(\"\");\n  const [customText, setCustomText] = useState(\"\"); // カスタムテキスト用の状態\n  const [useCustomText, setUseCustomText] = useState(false); // カスタムテキストを使用するかどうかのフラグ\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [showFileName, setShowFileName] = useState(true);\n  const [fontSize, setFontSize] = useState(16);\n  const [selectedFont, setSelectedFont] = useState(\"Arial, sans-serif\");\n  const [selectedVisuals, setSelectedVisuals] = useState({\n    bars: true,\n    circles: true,\n    waves: true,\n    particles: true,\n    polarLines: true,\n    spectrogramGrid: true,\n  });\n  const [waveAmplitude, setWaveAmplitude] = useState(50);\n  const [waveBaseline, setWaveBaseline] = useState(128);\n  const [particleCount, setParticleCount] = useState(50);\n  const [snowSize, setSnowSize] = useState(3);\n  const [lineCount, setLineCount] = useState(60);\n  const [lineLength, setLineLength] = useState(50);\n  const [gridCellSize, setGridCellSize] = useState(20);\n  const [gridSensitivity, setGridSensitivity] = useState(50);\n  const [playDelayTimeout, setPlayDelayTimeout] = useState(null); // 再生遅延用\n\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const audioRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const analyserRef = useRef(null);\n  const sourceRef = useRef(null);\n  const animationRef = useRef(null);\n  const particlesRef = useRef([]);\n  const gridCellsRef = useRef([]);\n\n  // Font options\n  const fontOptions = [\n    { name: \"Arial\", value: \"Arial, sans-serif\" },\n    { name: \"Times New Roman\", value: \"Times New Roman, serif\" },\n    { name: \"Courier New\", value: \"Courier New, monospace\" },\n    { name: \"Georgia\", value: \"Georgia, serif\" },\n    { name: \"Verdana\", value: \"Verdana, sans-serif\" },\n    { name: \"Impact\", value: \"Impact, sans-serif\" },\n    { name: \"Comic Sans MS\", value: \"Comic Sans MS, cursive\" },\n  ];\n\n  useEffect(() => {\n    // デフォルトの音声ファイルをセット\n    const defaultAudioPath = process.env.PUBLIC_URL + \"/audio/edge-of-knowledge.wav\";\n    setAudioFile(defaultAudioPath);\n    setFileName(\"edge-of-knowledge.wav\");\n    setDisplayName(\"edge-of-knowledge\");\n    \n    if (audioRef.current) {\n      audioRef.current.src = defaultAudioPath;\n    }\n  }, []);\n\n  // Set canvas dimensions for Instagram Reel (9:16 aspect ratio)\n  useEffect(() => {\n    const setCanvasDimensions = () => {\n      if (canvasRef.current && canvasContainerRef.current) {\n        const container = canvasContainerRef.current;\n        const containerWidth = container.clientWidth;\n        // Calculate height based on 9:16 aspect ratio\n        const reelHeight = (containerWidth * 16) / 9;\n\n        canvasRef.current.width = containerWidth;\n        canvasRef.current.height = reelHeight;\n\n        // Set fixed height to container to maintain aspect ratio\n        container.style.height = `${reelHeight}px`;\n      }\n    };\n\n    setCanvasDimensions();\n    window.addEventListener(\"resize\", setCanvasDimensions);\n    return () => window.removeEventListener(\"resize\", setCanvasDimensions);\n  }, []);\n\n  // Initialize particles\n  useEffect(() => {\n    initParticles();\n  }, [particleCount, snowSize]);\n\n  // Initialize grid cells\n  useEffect(() => {\n    initGridCells();\n  }, [gridCellSize]);\n\n  // Refresh animation when font or visualization changes\n  useEffect(() => {\n    if (isPlaying && analyserRef.current) {\n      // Cancel existing animation and restart to apply font changes\n      cancelAnimationFrame(animationRef.current);\n      visualize();\n    }\n  }, [fontSize, selectedFont, showFileName, useCustomText, customText]);\n\n  useEffect(() => {\n    if (isPlaying && analyserRef.current) {\n      cancelAnimationFrame(animationRef.current);\n      visualize();\n    }\n  }, [\n    selectedVisuals,\n    waveAmplitude,\n    snowSize,\n    lineCount,\n    lineLength,\n    gridCellSize,\n    gridSensitivity,\n  ]);\n\n  // Snow particle initialization\n  const initParticles = () => {\n    if (!canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const width = canvas.width || canvasContainerRef.current.clientWidth;\n    const height = canvas.height || canvasContainerRef.current.clientHeight;\n\n    const particles = [];\n    for (let i = 0; i < particleCount; i++) {\n      particles.push({\n        x: Math.random() * width,\n        y: Math.random() * height,\n        // Base radius now uses the snowSize state\n        radius: (Math.random() * 2.5 + 1.5) * (snowSize / 3),\n        speed: Math.random() * 1 + 0.5,\n        swingFactor: Math.random() * 2 + 1,\n        swingOffset: Math.random() * Math.PI * 2,\n        energy: 0,\n      });\n    }\n    particlesRef.current = particles;\n  };\n\n  // グリッドセルの初期化\n  const initGridCells = () => {\n    if (!canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const width = canvas.width || canvasContainerRef.current.clientWidth;\n    const height = canvas.height || canvasContainerRef.current.clientHeight;\n\n    const cellSize = gridCellSize;\n    const rows = Math.ceil(height / cellSize);\n    const cols = Math.ceil(width / cellSize);\n\n    const cells = [];\n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < cols; col++) {\n        cells.push({\n          x: col * cellSize,\n          y: row * cellSize,\n          size: cellSize,\n          energy: 0,\n          targetEnergy: 0,\n        });\n      }\n    }\n\n    gridCellsRef.current = cells;\n  };\n\n  // Calculate average volume\n  const calculateAverageVolume = (dataArray) => {\n    let sum = 0;\n    for (let i = 0; i < dataArray.length; i++) {\n      sum += dataArray[i];\n    }\n    return sum / dataArray.length;\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // ファイル名を小文字に変換して拡張子をチェック\n      const fileName = file.name.toLowerCase();\n      // 許可する音声ファイルの拡張子を増やす\n      const validExtensions = ['.wav', '.mp3', '.ogg', '.m4a', '.aac', '.flac', '.mp4'];\n      const isValidAudio = validExtensions.some(ext => fileName.endsWith(ext));\n      \n      if (isValidAudio || file.type.startsWith('audio/')) {\n        const url = URL.createObjectURL(file);\n        setAudioFile(url);\n        setFileName(file.name);\n        // 拡張子を削除して表示名を設定\n        setDisplayName(file.name.replace(/\\.[^/.]+$/, \"\"));\n  \n        if (audioRef.current) {\n          audioRef.current.src = url;\n        }\n      } else {\n        alert(\"Please upload an audio file (WAV, MP3, OGG, M4A, AAC, FLAC supported)\");\n      }\n    }\n  };\n\n  const setupAudioContext = () => {\n    if (!audioContextRef.current) {\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      audioContextRef.current = new AudioContext();\n      analyserRef.current = audioContextRef.current.createAnalyser();\n      analyserRef.current.fftSize = 2048;\n\n      sourceRef.current = audioContextRef.current.createMediaElementSource(\n        audioRef.current\n      );\n      sourceRef.current.connect(analyserRef.current);\n      analyserRef.current.connect(audioContextRef.current.destination);\n    }\n  };\n\n  const togglePlay = () => {\n    if (!audioFile) return;\n\n    if (isPlaying) {\n      audioRef.current.pause();\n      cancelAnimationFrame(animationRef.current);\n      // 再生中にPauseした場合、遅延タイマーもクリア\n      if (playDelayTimeout) {\n        clearTimeout(playDelayTimeout);\n        setPlayDelayTimeout(null);\n      }\n      setIsPlaying(false);\n    } else {\n      // すでに遅延タイマーがあればクリア\n      if (playDelayTimeout) {\n        clearTimeout(playDelayTimeout);\n      }\n      // 3秒遅延して再生\n      const timeoutId = setTimeout(() => {\n        setupAudioContext();\n        audioRef.current.play();\n        visualize();\n        setIsPlaying(true);\n        setPlayDelayTimeout(null);\n      }, 3000);\n      setPlayDelayTimeout(timeoutId);\n    }\n  };\n\n  const handleVisualChange = (type) => {\n    setSelectedVisuals((prev) => ({\n      ...prev,\n      [type]: !prev[type],\n    }));\n\n    // Ensure at least one visualization is selected\n    const updatedVisuals = {\n      ...selectedVisuals,\n      [type]: !selectedVisuals[type],\n    };\n\n    if (!Object.values(updatedVisuals).some((v) => v)) {\n      setSelectedVisuals((prev) => ({\n        ...prev,\n        bars: true,\n      }));\n    }\n  };\n\n  const visualize = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const analyser = analyserRef.current;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    const timeDataArray = new Uint8Array(bufferLength);\n\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n\n    // For smoothing waves\n    let prevWaveData = new Array(bufferLength).fill(waveBaseline);\n\n    // For smoothing polar line values\n    let prevPolarData = new Array(lineCount).fill(0);\n\n    const draw = () => {\n      animationRef.current = requestAnimationFrame(draw);\n\n      analyser.getByteFrequencyData(dataArray);\n      analyser.getByteTimeDomainData(timeDataArray);\n\n      // Calculate average volume\n      const avgVolume = calculateAverageVolume(dataArray);\n\n      ctx.fillStyle = \"rgb(20, 20, 20)\";\n      ctx.fillRect(0, 0, WIDTH, HEIGHT);\n\n      // Bar visualization\n      if (selectedVisuals.bars) {\n        const barWidth = (WIDTH / bufferLength) * 2.5;\n        let barHeight;\n        let x = 0;\n\n        for (let i = 0; i < bufferLength; i++) {\n          barHeight = (dataArray[i] * HEIGHT) / 512;\n\n          const grayValue = Math.min(255, dataArray[i] + 50);\n          ctx.fillStyle = `rgba(${grayValue}, ${grayValue}, ${grayValue}, 0.7)`;\n          ctx.fillRect(x, HEIGHT - barHeight, barWidth, barHeight);\n\n          x += barWidth + 1;\n          if (x > WIDTH) break;\n        }\n      }\n\n      // Circle visualization\n      if (selectedVisuals.circles) {\n        ctx.beginPath();\n        ctx.arc(WIDTH / 2, HEIGHT / 2, 5, 0, 2 * Math.PI);\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.7)\";\n        ctx.fill();\n\n        const maxRadius = Math.min(WIDTH, HEIGHT) / 2;\n\n        for (let i = 0; i < bufferLength; i += 5) {\n          const radius = (dataArray[i] * maxRadius) / 255;\n          if (radius > 0) {\n            ctx.beginPath();\n            ctx.arc(WIDTH / 2, HEIGHT / 2, radius, 0, 2 * Math.PI);\n            const opacity = (dataArray[i] / 255) * 0.6;\n            ctx.strokeStyle = `rgba(255, 255, 255, ${opacity})`;\n            ctx.lineWidth = 2;\n            ctx.stroke();\n          }\n        }\n      }\n\n      // Wave visualization\n      if (selectedVisuals.waves) {\n        ctx.lineWidth = 2;\n        ctx.strokeStyle = \"rgba(255, 255, 255, 0.7)\";\n        ctx.beginPath();\n\n        const sliceWidth = WIDTH / bufferLength;\n        let x = 0;\n\n        const amplitudeScale = waveAmplitude / 100;\n        const volumeFactor = Math.max(0.2, Math.min(1.5, avgVolume / 128));\n\n        // 十分な振幅があるか確認するためのフラグ\n        let hasSignificantAmplitude = false;\n        \n        // 振幅が一定のしきい値を超えているか調べる\n        for (let i = 0; i < bufferLength; i++) {\n          const amplitude = Math.abs(timeDataArray[i] - waveBaseline);\n          if (amplitude * amplitudeScale * volumeFactor > 2) {\n            hasSignificantAmplitude = true;\n            break;\n          }\n        }\n\n        // 振幅が十分ある場合のみ波形を描画\n        if (hasSignificantAmplitude) {\n          for (let i = 0; i < bufferLength; i++) {\n            const deviation =\n              (timeDataArray[i] - waveBaseline) * amplitudeScale * volumeFactor;\n\n            const smoothedValue =\n              prevWaveData[i] * 0.3 + (waveBaseline + deviation) * 0.7;\n            prevWaveData[i] = smoothedValue;\n\n            const y =\n              HEIGHT / 2 + ((smoothedValue - waveBaseline) * HEIGHT) / 256;\n\n            if (i === 0) {\n              ctx.moveTo(x, y);\n            } else {\n              ctx.lineTo(x, y);\n            }\n\n            x += sliceWidth;\n            if (x > WIDTH) break;\n          }\n\n          ctx.stroke();\n        }\n      }\n\n      // Snow particles visualization with enhanced audio reactivity\n      if (selectedVisuals.particles) {\n        const particles = particlesRef.current;\n        const volume = avgVolume / 255;\n        const time = Date.now() / 1000;\n\n        particles.forEach((p) => {\n          // Update energy based on volume - increased amplitude for better reactivity\n          p.energy = volume * 2.5; // Amplified to make changes more visible\n\n          // Make particles fall from top to bottom\n          p.y += p.speed * (1 + p.energy);\n\n          // Add swinging motion (like snow)\n          p.x +=\n            Math.sin(time * p.swingFactor + p.swingOffset) *\n            (0.5 + p.energy * 1.5);\n\n          // Reset position when reaching bottom\n          if (p.y > HEIGHT) {\n            p.y = 0;\n            p.x = Math.random() * WIDTH;\n          }\n\n          // Keep particles within screen bounds\n          if (p.x < 0) p.x = WIDTH;\n          if (p.x > WIDTH) p.x = 0;\n\n          // Draw snowflake with dramatically enhanced size variation based on audio\n          // Significantly larger size multiplier based on energy\n          const radius = p.radius * (1 + p.energy * 4); // Amplified size change\n          const brightness = 200 + Math.floor(p.energy * 55);\n\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, radius, 0, Math.PI * 2);\n          ctx.fillStyle = `rgba(${brightness}, ${brightness}, ${brightness}, 0.8)`;\n          ctx.fill();\n\n          // Draw snowflake pattern for particles\n          // Larger minimum threshold to make sure more snowflakes show their pattern\n          if (radius > 1.5) {\n            // Draw cross pattern for snowflake\n            const armLength = radius * 1.5;\n            ctx.beginPath();\n            // Horizontal line\n            ctx.moveTo(p.x - armLength, p.y);\n            ctx.lineTo(p.x + armLength, p.y);\n            // Vertical line\n            ctx.moveTo(p.x, p.y - armLength);\n            ctx.lineTo(p.x, p.y + armLength);\n            // Diagonal line 1\n            ctx.moveTo(p.x - armLength * 0.7, p.y - armLength * 0.7);\n            ctx.lineTo(p.x + armLength * 0.7, p.y + armLength * 0.7);\n            // Diagonal line 2\n            ctx.moveTo(p.x - armLength * 0.7, p.y + armLength * 0.7);\n            ctx.lineTo(p.x + armLength * 0.7, p.y - armLength * 0.7);\n            ctx.strokeStyle = `rgba(${brightness}, ${brightness}, ${brightness}, 0.4)`;\n            ctx.lineWidth = 0.5;\n            ctx.stroke();\n          }\n        });\n      }\n\n      // Polar Lines visualization\n      if (selectedVisuals.polarLines) {\n        const centerX = WIDTH / 2;\n        const centerY = HEIGHT / 2;\n        const maxLength = Math.min(WIDTH, HEIGHT) * (lineLength / 100);\n\n        // 周波数データを放射状のラインに分配\n        const step = Math.floor(bufferLength / lineCount);\n\n        // 放射状ラインを描画\n        for (let i = 0; i < lineCount; i++) {\n          const angle = (i / lineCount) * Math.PI * 2;\n          const dataIndex = i * step;\n\n          // 音量に基づいてラインの長さを決定（スムージング適用）\n          const rawValue = dataArray[dataIndex % bufferLength] / 255;\n          const smoothedValue = prevPolarData[i] * 0.3 + rawValue * 0.7;\n          prevPolarData[i] = smoothedValue;\n\n          const length = smoothedValue * maxLength;\n\n          // ラインの座標を計算\n          const x1 = centerX;\n          const y1 = centerY;\n          const x2 = centerX + Math.cos(angle) * length;\n          const y2 = centerY + Math.sin(angle) * length;\n\n          // ラインの太さを音量に基づいて変える\n          const lineWidth = 1 + smoothedValue * 4;\n\n          // ラインの明るさも音量に基づいて変える\n          const brightness = 150 + Math.floor(smoothedValue * 105);\n          const opacity = 0.3 + smoothedValue * 0.6;\n\n          // ラインを描画\n          ctx.beginPath();\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x2, y2);\n          ctx.strokeStyle = `rgba(${brightness}, ${brightness}, ${brightness}, ${opacity})`;\n          ctx.lineWidth = lineWidth;\n          ctx.stroke();\n\n          // フェードアウト効果のあるサブライン\n          if (smoothedValue > 0.2) {\n            const subLength = length * 1.3;\n            const x3 = centerX + Math.cos(angle) * subLength;\n            const y3 = centerY + Math.sin(angle) * subLength;\n\n            ctx.beginPath();\n            ctx.moveTo(x2, y2);\n            ctx.lineTo(x3, y3);\n            ctx.strokeStyle = `rgba(${brightness}, ${brightness}, ${brightness}, ${\n              opacity * 0.3\n            })`;\n            ctx.lineWidth = lineWidth * 0.5;\n            ctx.stroke();\n          }\n        }\n      }\n\n      // スペクトログラムグリッド視覚化（新しい視覚化）\n      if (selectedVisuals.spectrogramGrid) {\n        const cells = gridCellsRef.current;\n        const sensitivity = gridSensitivity / 100; // 感度を0-1の範囲に正規化\n\n        // 周波数データを分析してグリッドのエネルギーを更新\n        const frequencyStep = Math.floor(bufferLength / cells.length);\n\n        cells.forEach((cell, index) => {\n          // 周波数データからエネルギーを計算\n          const dataIndex = (index * frequencyStep) % bufferLength;\n          const rawEnergy = (dataArray[dataIndex] / 255) * sensitivity * 2; // 感度を適用\n\n          // スムージングを適用\n          cell.targetEnergy = rawEnergy;\n          cell.energy = cell.energy * 0.7 + cell.targetEnergy * 0.3;\n\n          // エネルギーに応じてグリッドセルを描画\n          if (cell.energy > 0.05) {\n            // 閾値を設定してノイズを減らす\n            const size = cell.size * Math.min(0.9, cell.energy * 0.8); // 最大サイズの制限\n            const x = cell.x + (cell.size - size) / 2;\n            const y = cell.y + (cell.size - size) / 2;\n\n            // エネルギーに応じて明るさを変える\n            const brightness = 100 + Math.floor(cell.energy * 155);\n            const opacity = Math.min(0.9, 0.2 + cell.energy * 0.7);\n\n            // グリッドセルを描画\n            ctx.fillStyle = `rgba(${brightness}, ${brightness}, ${brightness}, ${opacity})`;\n\n            // 正方形ではなく円を描画してモダンな印象に\n            ctx.beginPath();\n            ctx.arc(\n              cell.x + cell.size / 2,\n              cell.y + cell.size / 2,\n              size / 2,\n              0,\n              Math.PI * 2\n            );\n            ctx.fill();\n\n            // エネルギーが高い場合はアウトラインも描画\n            if (cell.energy > 0.4) {\n              ctx.strokeStyle = `rgba(255, 255, 255, ${opacity * 0.6})`;\n              ctx.lineWidth = 1;\n              ctx.stroke();\n            }\n\n            // 強いエネルギーの場合、パルス効果を追加\n            if (cell.energy > 0.7) {\n              const pulseSize = size * 1.3;\n              const pulseX = cell.x + (cell.size - pulseSize) / 2;\n              const pulseY = cell.y + (cell.size - pulseSize) / 2;\n\n              ctx.beginPath();\n              ctx.arc(\n                cell.x + cell.size / 2,\n                cell.y + cell.size / 2,\n                pulseSize / 2,\n                0,\n                Math.PI * 2\n              );\n              ctx.strokeStyle = `rgba(255, 255, 255, ${opacity * 0.2})`;\n              ctx.lineWidth = 2;\n              ctx.stroke();\n            }\n          }\n        });\n      }\n\n      // Display text (filename or custom text)\n      if (showFileName) {\n        // テキストを表示する場合\n        const textToDisplay = useCustomText && customText.trim() !== \"\" \n          ? customText \n          : displayName;\n        \n        if (textToDisplay) {\n          ctx.font = `${fontSize}px ${selectedFont}`;\n          ctx.fillStyle = \"white\";\n          ctx.textAlign = \"center\";\n          ctx.fillText(textToDisplay, WIDTH / 2, HEIGHT / 2);\n        }\n      }\n    };\n\n    draw();\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Music Visualizer</h1>\n\n      <div className=\"input-section\">\n        <input\n          type=\"file\"\n          accept=\"audio/*,.wav,.mp3,.ogg,.m4a,.aac,.flac\"\n          onChange={handleFileChange}\n          id=\"file-input\"\n          className=\"file-input\"\n        />\n        <label htmlFor=\"file-input\" className=\"file-input-label\">\n          Choose .wav file\n        </label>\n      </div>\n\n      {fileName && (\n        <div className=\"file-info\">Selected file: {displayName}</div>\n      )}\n\n      <div className=\"control-panel\">\n        <div className=\"control-row\">\n          <button\n            onClick={togglePlay}\n            disabled={!audioFile}\n            className={`control-button ${!audioFile ? \"disabled\" : \"\"}`}\n          >\n            {isPlaying ? \"Pause\" : \"Play\"}\n          </button>\n\n          <div className=\"control-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={showFileName}\n                onChange={() => setShowFileName(!showFileName)}\n              />\n              Show Text\n            </label>\n          </div>\n        </div>\n\n        {/* テキスト設定セクション */}\n        {showFileName && (\n          <div className=\"control-row\">\n            <div className=\"control-group text-display-option\">\n              <label>\n                <input\n                  type=\"radio\"\n                  checked={!useCustomText}\n                  onChange={() => setUseCustomText(false)}\n                />\n                Use Filename\n              </label>\n              <label>\n                <input\n                  type=\"radio\"\n                  checked={useCustomText}\n                  onChange={() => setUseCustomText(true)}\n                />\n                Use Custom Text\n              </label>\n            </div>\n          </div>\n        )}\n\n        {/* カスタムテキスト入力フィールド（カスタムテキストモードが選択されている場合のみ表示） */}\n        {showFileName && useCustomText && (\n          <div className=\"control-row\">\n            <div className=\"text-input-container\">\n              <input\n                type=\"text\"\n                value={customText}\n                onChange={(e) => setCustomText(e.target.value)}\n                placeholder=\"Enter your custom text\"\n                className=\"custom-text-input\"\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Font settings */}\n        <div className=\"control-row\">\n          <div className=\"slider-container\">\n            <label>Font Size: {fontSize}px</label>\n            <input\n              type=\"range\"\n              min=\"8\"\n              max=\"64\"\n              value={fontSize}\n              onChange={(e) => setFontSize(parseInt(e.target.value))}\n              className=\"slider\"\n            />\n          </div>\n\n          <div className=\"control-group\">\n            <label>Font:</label>\n            <select\n              value={selectedFont}\n              onChange={(e) => setSelectedFont(e.target.value)}\n              className=\"select\"\n            >\n              {fontOptions.map((font) => (\n                <option key={font.name} value={font.value}>\n                  {font.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        {/* Visualization selection */}\n        <div className=\"control-row\">\n          <label>Visualizations:</label>\n          <div className=\"checkbox-group\">\n            <div className=\"visual-option\">\n              <input\n                type=\"checkbox\"\n                id=\"bars\"\n                checked={selectedVisuals.bars}\n                onChange={() => handleVisualChange(\"bars\")}\n              />\n              <label htmlFor=\"bars\">Bars</label>\n            </div>\n\n            <div className=\"visual-option\">\n              <input\n                type=\"checkbox\"\n                id=\"circles\"\n                checked={selectedVisuals.circles}\n                onChange={() => handleVisualChange(\"circles\")}\n              />\n              <label htmlFor=\"circles\">Circles</label>\n            </div>\n\n            <div className=\"visual-option\">\n              <input\n                type=\"checkbox\"\n                id=\"waves\"\n                checked={selectedVisuals.waves}\n                onChange={() => handleVisualChange(\"waves\")}\n              />\n              <label htmlFor=\"waves\">Waves</label>\n            </div>\n\n            <div className=\"visual-option\">\n              <input\n                type=\"checkbox\"\n                id=\"particles\"\n                checked={selectedVisuals.particles}\n                onChange={() => handleVisualChange(\"particles\")}\n              />\n              <label htmlFor=\"particles\">Snow</label>\n            </div>\n\n            <div className=\"visual-option\">\n              <input\n                type=\"checkbox\"\n                id=\"polarLines\"\n                checked={selectedVisuals.polarLines}\n                onChange={() => handleVisualChange(\"polarLines\")}\n              />\n              <label htmlFor=\"polarLines\">Polar Lines</label>\n            </div>\n\n            <div className=\"visual-option\">\n              <input\n                type=\"checkbox\"\n                id=\"spectrogramGrid\"\n                checked={selectedVisuals.spectrogramGrid}\n                onChange={() => handleVisualChange(\"spectrogramGrid\")}\n              />\n              <label htmlFor=\"spectrogramGrid\">Spectrogram Grid</label>\n            </div>\n          </div>\n        </div>\n\n        {/* Wave sensitivity adjustment (only shown if Waves is selected) */}\n        {selectedVisuals.waves && (\n          <div className=\"control-row\">\n            <div className=\"slider-container\">\n              <label>Wave Sensitivity: {waveAmplitude}%</label>\n              <input\n                type=\"range\"\n                min=\"5\"\n                max=\"100\"\n                value={waveAmplitude}\n                onChange={(e) => setWaveAmplitude(parseInt(e.target.value))}\n                className=\"sensitivity-slider\"\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Particle count adjustment (only shown if Particles is selected) */}\n        {selectedVisuals.particles && (\n          <div className=\"control-row\">\n            <div className=\"slider-container\">\n              <label>Snow Density: {particleCount}</label>\n              <input\n                type=\"range\"\n                min=\"10\"\n                max=\"200\"\n                value={particleCount}\n                onChange={(e) => setParticleCount(parseInt(e.target.value))}\n                className=\"sensitivity-slider\"\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Snow size adjustment (only shown if Particles is selected) */}\n        {selectedVisuals.particles && (\n          <div className=\"control-row\">\n            <div className=\"slider-container\">\n              <label>Snow Size: {snowSize}</label>\n              <input\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                value={snowSize}\n                onChange={(e) => setSnowSize(parseInt(e.target.value))}\n                className=\"sensitivity-slider\"\n              />\n            </div>\n          </div>\n        )}\n\n        {/* Polar Lines adjustments (only shown if Polar Lines is selected) */}\n        {selectedVisuals.polarLines && (\n          <>\n            <div className=\"control-row\">\n              <div className=\"slider-container\">\n                <label>Line Count: {lineCount}</label>\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"180\"\n                  value={lineCount}\n                  onChange={(e) => setLineCount(parseInt(e.target.value))}\n                  className=\"sensitivity-slider\"\n                />\n              </div>\n            </div>\n            <div className=\"control-row\">\n              <div className=\"slider-container\">\n                <label>Line Length: {lineLength}%</label>\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"100\"\n                  value={lineLength}\n                  onChange={(e) => setLineLength(parseInt(e.target.value))}\n                  className=\"sensitivity-slider\"\n                />\n              </div>\n            </div>\n          </>\n        )}\n\n        {/* スペクトログラムグリッド設定 (only shown if Spectrogram Grid is selected) */}\n        {selectedVisuals.spectrogramGrid && (\n          <>\n            <div className=\"control-row\">\n              <div className=\"slider-container\">\n                <label>Grid Cell Size: {gridCellSize}px</label>\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"50\"\n                  value={gridCellSize}\n                  onChange={(e) => setGridCellSize(parseInt(e.target.value))}\n                  className=\"sensitivity-slider\"\n                />\n              </div>\n            </div>\n            <div className=\"control-row\">\n              <div className=\"slider-container\">\n                <label>Grid Sensitivity: {gridSensitivity}%</label>\n                <input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"100\"\n                  value={gridSensitivity}\n                  onChange={(e) => setGridSensitivity(parseInt(e.target.value))}\n                  className=\"sensitivity-slider\"\n                />\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n\n      <div ref={canvasContainerRef} className=\"canvas-container\">\n        <canvas ref={canvasRef} className=\"canvas\"></canvas>\n      </div>\n\n      <audio ref={audioRef} className=\"audio-element\" />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}